---
import { Icon } from "astro-icon/components";

const menuItems = [
  { text: "Sobre mí", href: "#about", icon: "mdi:account" },
  { text: "Proyectos", href: "#projects", icon: "mdi:briefcase" },
  { text: "Servicios", href: "#services", icon: "mdi:cogs" },
  { text: "Contacto", href: "#contact", icon: "mdi:email" },
];

const whatsappLink = `https://wa.me/+5353118193?text=${encodeURIComponent( "Hola, me interesa trabajar contigo.")}`;
---

<header class="fixed w-full bg-white/80 backdrop-blur-sm z-50 top-0 border-b border-gray-100">
  <!-- Contenedor de navegación -->
  <nav class="container mx-auto px-4 py-4 flex justify-between items-center">
    <a href="#" 
       id="site-logo"
       class="text-xl font-bold text-gray-900 inline-block"
       aria-label="ThejasonDev Portfolio"
       style="font-display: block; font-family: system-ui, -apple-system, sans-serif;">
       <span class="inline-block logo-text">{'{ thejasondev }'}</span>
    </a>

    <!-- Botón hamburguesa -->
    <button
      id="menu-toggle"
      class="md:hidden relative w-7 h-7 z-60"
      aria-label="Menu"
    >
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>

    <!-- Menú de escritorio -->
    <ul class="hidden md:flex space-x-8">
      {menuItems.map(item => (
        <li>
          <a
            href={item.href}
            class="text-gray-600 hover:text-gray-900 transition-colors font-inter"
          >
            {item.text}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</header>

<!-- Menú móvil -->
<div
  id="mobile-menu"
  class="fixed inset-0 bg-white/95 backdrop-blur-md transform -translate-y-full transition-all duration-500 ease-in-out md:hidden z-40 flex flex-col opacity-0 pointer-events-none"
>
  <div class="h-full flex flex-col justify-center px-8">
    <ul class="space-y-6 text-center">
      {menuItems.map(item => (
        <li class="menu-item opacity-0 transform translate-y-8 transition-all duration-300 ease-out">
          <a
            href={item.href}
            class="flex items-center justify-center text-xl text-gray-900 hover:text-gray-600 transition-colors font-playfair group"
          >
            <span class="menu-icon bg-gray-100 p-2 rounded-full mr-3 group-hover:bg-gray-200 transition-colors">
              <Icon name={item.icon} class="w-5 h-5" />
            </span>
            {item.text}
          </a>
        </li>
      ))}
      <li class="mt-10 menu-item opacity-0 transform translate-y-8 transition-all duration-300 ease-out">
        <a
          href={whatsappLink}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-8 py-3 bg-gray-900 text-white rounded-full hover:bg-gray-800 transition-all font-medium tracking-wide group hover:scale-105 shadow-md"
        >
          <Icon name="mdi:whatsapp" class="w-5 h-5 mr-2" />
          Contáctame
        </a>
      </li>
    </ul>
  </div>
</div>

<style>
  /* Estilos para el botón hamburguesa */
  .hamburger-line {
    @apply absolute left-0 h-0.5 w-full bg-gray-900 transition-all duration-300;
  }
  .hamburger-line:first-child {
    @apply top-1;
  }
  .hamburger-line:nth-child(2) {
    @apply top-3;
  }
  .hamburger-line:last-child {
    @apply top-5;
  }

  /* Transformación del botón al abrir el menú */
  #menu-toggle.menu-open .hamburger-line:first-child {
    @apply top-3 rotate-45;
  }
  #menu-toggle.menu-open .hamburger-line:nth-child(2) {
    @apply opacity-0 scale-0;
  }
  #menu-toggle.menu-open .hamburger-line:last-child {
    @apply top-3 -rotate-45;
  }
  
  /* Overlay para el menú móvil */
  #mobile-menu::before {
    content: '';
    @apply absolute inset-0 bg-gradient-to-b from-white to-gray-50 opacity-0 transition-opacity duration-500;
    z-index: -1;
  }
  
  #mobile-menu.translate-y-0::before {
    @apply opacity-100;
  }
  
  /* Optimización de rendimiento */
  #mobile-menu {
    contain: content;
    will-change: transform, opacity;
  }
  
  .menu-item {
    contain: layout style;
  }
  
  /* Evitar repaints del botón */
  #menu-toggle {
    contain: layout style;
    will-change: transform;
  }
  
  /* Optimización para el logo (elemento LCP) */
  .logo-text {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    contain: layout style;
    content-visibility: auto;
    font-display: block;
  }
  
  /* Logo pulse animation */
  @keyframes logo-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  .logo-pulse {
    animation: logo-pulse 0.3s ease-in-out;
  }
</style>

<script>
  // Referencias a los elementos
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuItems = document.querySelectorAll('.menu-item');
  const menuLinks = document.querySelectorAll('#mobile-menu a');
  const siteLogo = document.getElementById('site-logo');
  const allLinks = document.querySelectorAll('a[href^="#"]');
  
  // Scroll to top when clicking on the logo for single page landing
  if (siteLogo) {
    siteLogo.addEventListener('click', (e) => {
      e.preventDefault(); // Prevent any navigation
      
      // Add a subtle pulse animation when clicking
      siteLogo.classList.add('logo-pulse');
      setTimeout(() => {
        siteLogo.classList.remove('logo-pulse');
      }, 300);
      
      // Smooth scroll to top with animation
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
      
      // Close mobile menu if open
      if (mobileMenu && mobileMenu.classList.contains('translate-y-0')) {
        menuToggle?.classList.remove('menu-open');
        mobileMenu.classList.remove('translate-y-0');
        document.body.style.overflow = '';
      }
    });
  }
  
  // Implementar scroll suave para todos los enlaces de ancla
  allLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      // Solo prevenir comportamiento predeterminado para enlaces de ancla 
      // (no para enlaces externos o archivos)
      const href = link.getAttribute('href');
      if (href && href.startsWith('#')) {
        e.preventDefault();
        
        // Si el enlace es una ancla vacía (#), desplazarse hasta arriba
        if (href === '#') {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        } else {
          // Obtener el elemento objetivo de la ancla
          const targetId = href.substring(1);
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            // Calcular posición con desplazamiento para el header fijo
            const headerOffset = 80; // Altura aproximada del header
            const elementPosition = targetElement.getBoundingClientRect().top;
            const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
            
            // Desplazarse a la posición calculada
            window.scrollTo({
              top: offsetPosition,
              behavior: 'smooth'
            });
          }
        }
        
        // Cerrar el menú móvil si está abierto
        if (mobileMenu && mobileMenu.classList.contains('translate-y-0')) {
          menuToggle?.classList.remove('menu-open');
          mobileMenu.classList.remove('translate-y-0');
          document.body.style.overflow = '';
        }
      }
    });
  });
  
  // Función para mostrar los elementos del menú con delay
  function animateMenuItems(show = true) {
    if (mobileMenu) {
      if (show) {
        mobileMenu.classList.add('opacity-100');
        mobileMenu.classList.remove('opacity-0', 'pointer-events-none');
      } else {
        setTimeout(() => {
          mobileMenu.classList.remove('opacity-100');
          mobileMenu.classList.add('opacity-0', 'pointer-events-none');
        }, 300);
      }
    }
  
    menuItems.forEach((item, index) => {
      // Usar requestAnimationFrame para optimizar las animaciones
      requestAnimationFrame(() => {
        setTimeout(() => {
          if (show) {
            item.classList.remove('opacity-0', 'translate-y-8');
          } else {
            item.classList.add('opacity-0', 'translate-y-8');
          }
        }, 80 + (index * 60)); // Tiempos reducidos para mejor UX
      });
    });
  }

  // Al hacer clic en el botón hamburguesa
  menuToggle?.addEventListener('click', () => {
    menuToggle.classList.toggle('menu-open');
    
    if (mobileMenu) {
      const isOpen = mobileMenu.classList.toggle('translate-y-0');
      
      if (isOpen) {
        // Bloquear scroll cuando el menú está abierto
        document.body.style.overflow = 'hidden';
        // Animar entrada de elementos
        animateMenuItems(true);
      } else {
        // Restaurar scroll
        document.body.style.overflow = '';
        // Animar salida de elementos
        animateMenuItems(false);
      }
    }
  });

  // Al hacer clic en un enlace del menú móvil, se cierra
  menuLinks.forEach(link => {
    link.addEventListener('click', () => {
      menuToggle?.classList.remove('menu-open');
      
      if (mobileMenu?.classList.contains('translate-y-0')) {
        // Animar salida de elementos
        animateMenuItems(false);
        
        // Esperar a que terminen las animaciones antes de ocultar el menú
        setTimeout(() => {
          mobileMenu.classList.remove('translate-y-0');
          document.body.style.overflow = '';
        }, 300);
      }
    });
  });
</script>

